{"version":3,"file":"static/js/666.53a636a7.chunk.js","mappings":"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","sources":["comps/full-screen.tsx","app/command-bar/styles.ts","comps/info-callout.tsx","app/command-bar/index.tsx","utils/helpers.ts","app/connections/peer.tsx","app/connections/index.tsx","app/side-panel/styles.ts","comps/chat/styles.ts","comps/chat/message.tsx","comps/chat/messages.tsx","app/side-panel/chat.tsx","app/side-panel/people.tsx","app/side-panel/index.tsx","app/video-boxes/styles.ts","utils/hooks/use-video-size.tsx","app/video-boxes/index.tsx","app/index.tsx"],"sourcesContent":["import fscreen from 'fscreen'\nimport { useEffect, useRef, useState } from 'react'\nimport type { FunctionComponent, PropsWithChildren } from 'react'\nimport toast, { Timeout, ToastType } from './toast'\n\ninterface Props {\n    on?: boolean\n    fullbody?: boolean\n    dblclick?: boolean\n}\n\n/* eslint-disable react/jsx-props-no-spreading */\nconst Fullscreen: FunctionComponent<PropsWithChildren<Props>> = ({\n    on,\n    fullbody,\n    dblclick,\n    ...props\n}) => {\n    const ref = useRef<HTMLDivElement | null>(null)\n    useEffect(() => {\n        if (!fscreen.fullscreenEnabled) return undefined\n        let elem: HTMLElement\n        if (!fullbody && ref.current) elem = ref.current\n        else elem = document.body\n        try {\n            if (on && !fscreen.fullscreenElement) {\n                fscreen.requestFullscreen(elem)\n            } else if (!on && fscreen.fullscreenElement) {\n                fscreen.exitFullscreen()\n            }\n        } catch (err) {\n            toast('Fullscreen error', { autoClose: Timeout.SHORT, type: ToastType.error })\n        }\n        const handleDblClick = () => {\n            if (!dblclick) return\n            try {\n                const isFullscreen = !!fscreen.fullscreenElement\n                if (isFullscreen) fscreen.exitFullscreen()\n                else {\n                    fscreen.requestFullscreen(elem)\n                    toast('Entered into fullscreen mode, double click to toggle', {\n                        type: ToastType.info,\n                    })\n                }\n            } catch (err) {\n                toast('Fullscreen error', { autoClose: Timeout.SHORT, type: ToastType.error })\n            }\n        }\n        elem.addEventListener('dblclick', handleDblClick)\n        return () => elem.removeEventListener('dblclick', handleDblClick)\n    }, [on, fullbody, dblclick])\n    return <div ref={ref} {...props} />\n}\nexport default Fullscreen\n\nexport const useFullScreen = (): { isFullscreen: boolean } => {\n    const [on, setOn] = useState(!!fscreen.fullscreenElement)\n\n    useEffect(() => {\n        const listener = () => {\n            if (!!fscreen.fullscreenElement && !on) {\n                setOn(true)\n            } else if (!fscreen.fullscreenElement && on) {\n                setOn(false)\n            }\n        }\n        fscreen.addEventListener('fullscreenchange', listener)\n        return () => fscreen.removeEventListener('fullscreenchange', listener)\n    }, [on])\n\n    return {\n        isFullscreen: on,\n    }\n}\n","import { FontSizes, FontWeights, mergeStyles } from '@fluentui/react'\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport { NeutralColors } from '@fluentui/theme'\nimport type { IButtonStyles, ICommandBarStyles } from '@fluentui/react'\n\nexport const buttonStyles: IButtonStyles = {\n    icon: {\n        fontSize: FontSizes.xLarge,\n    },\n}\n\nexport const lightOption = mergeStyles({\n    backgroundColor: NeutralColors.gray30,\n    '& :hover': {\n        backgroundColor: NeutralColors.gray20,\n    },\n    '& button, & button:hover': {\n        color: NeutralColors.black,\n    },\n})\nexport const darkOption = mergeStyles({\n    backgroundColor: NeutralColors.gray140,\n    '& :hover': {\n        backgroundColor: NeutralColors.gray150,\n    },\n    '& button, & button:hover': {\n        color: NeutralColors.white,\n    },\n})\n\nexport const containerStyles: ICommandBarStyles = {\n    root: {\n        padding: '0 .5em',\n        height: '40px',\n    },\n}\n\nexport const LeaveButtonStyles = {\n    root: {\n        margin: 'auto .5em',\n        transition: 'all .1s ease',\n    },\n    rootHovered: {\n        backgroundColor: '#CE0B1B',\n        color: 'white',\n    },\n    label: {\n        fontSize: FontSizes.mediumPlus,\n        fontWeight: FontWeights.regular,\n    },\n}\n","import {\n    Callout,\n    ICalloutProps,\n    mergeStyleSets,\n    FontSizes,\n    FontWeights,\n    Link,\n    Label,\n} from '@fluentui/react'\nimport type { FunctionComponent } from 'react'\nimport { useRecoilValue } from 'recoil'\nimport { roomState } from '../atoms'\n\nconst callout = mergeStyleSets({\n    container: {\n        padding: '1em',\n    },\n    title: {\n        fontSize: '1.75em',\n        fontWeight: FontWeights.semilight,\n        margin: '0',\n    },\n    secondaryTitle: {\n        fontSize: '1em',\n        fontWeight: FontWeights.semilight,\n        margin: '.25em 0',\n    },\n    body: {\n        margin: '.5em 0',\n    },\n    footer: {\n        fontSize: FontSizes.smallPlus,\n        marginTop: '2em',\n        textAlign: 'center',\n        display: 'flex',\n        justifyContent: 'space-between',\n    },\n})\n\ninterface MyCalloutProps {\n    showFooter?: boolean\n}\n\nconst MyCallout: FunctionComponent<ICalloutProps & MyCalloutProps> = ({ showFooter, ...props }) => {\n    const room = useRecoilValue(roomState)\n    const link = `${window.location.origin}/room/${room?.id}`\n    return (\n        <Callout\n            className={callout.container}\n            role=\"dialog\"\n            calloutMaxWidth={400}\n            // eslint-disable-next-line\n            {...props}\n        >\n            <h1 className={callout.title}>{room?.name}</h1>\n            <h2 className={callout.secondaryTitle}>\n                Room created by {room?.created_by || '<Enter your name next time>'}\n            </h2>\n            <h2 className={callout.secondaryTitle}>\n                ID: <Label>{room?.id}</Label>\n            </h2>\n            <div className={callout.body}>\n                You can invite people directly to this chat by sharing this link{' '}\n                <Label>{link}</Label>\n            </div>\n            {showFooter && (\n                <div className={callout.footer}>\n                    <span>\n                        Mooz by{' '}\n                        <Link\n                            href=\"https://github.com/muzam1l\"\n                            target=\"_blank\"\n                            rel=\"nofollow noreferrer noopener\"\n                        >\n                            muzam1l\n                        </Link>\n                    </span>\n                    <Link\n                        href=\"https://github.com/muzam1l/mooz\"\n                        target=\"_blank\"\n                        rel=\"nofollow noreferrer noopener\"\n                    >\n                        Fork me on GitHub\n                    </Link>\n                </div>\n            )}\n        </Callout>\n    )\n}\n\nexport default MyCallout\n","import { CommandBar, DefaultButton, ThemeProvider, useTheme } from '@fluentui/react'\nimport type { ICommandBarItemProps, IButtonProps } from '@fluentui/react'\nimport { FunctionComponent, useState } from 'react'\nimport { useRecoilValue } from 'recoil'\nimport { useFullScreen } from '../../comps/full-screen'\nimport {\n    audioDevicesState,\n    videoDevicesState,\n    currentCameraIdState,\n    currentMicIdState,\n    remoteStreamsState,\n} from '../../atoms'\nimport { useDisplayMedia, useUserMedia } from '../../utils/hooks/use-streams'\nimport { LeaveButtonStyles, buttonStyles, containerStyles, lightOption, darkOption } from './styles'\nimport { darkPaletteAlt, lightPaletteAlt } from '../../utils/theme/themes'\nimport { useTheme as useThemeType, useSetTheme } from '../../utils/theme/theme-context'\nimport useAbort from '../../utils/hooks/use-abort'\nimport InfoCallout from '../../comps/info-callout'\n\ninterface MyCommandBarProps {\n    onClickPeople?: () => void\n    onClickChat?: () => void\n    onClickFullscreen?: () => void\n}\n\nconst MyCommandBar: FunctionComponent<MyCommandBarProps> = ({\n    onClickPeople,\n    onClickChat,\n    onClickFullscreen,\n}) => {\n    const theme = useTheme()\n    const themeType = useThemeType()\n    const setTheme = useSetTheme()\n\n    const currentMicId = useRecoilValue(currentMicIdState)\n    const currentCameraId = useRecoilValue(currentCameraIdState)\n    const audioDevices = useRecoilValue(audioDevicesState)\n    const videoDevices = useRecoilValue(videoDevicesState)\n    const { displayMediaStatus, startDisplayMedia, stopDisplayMedia } = useDisplayMedia()\n    const { startUserMedia, stopUserMedia } = useUserMedia()\n\n    const { isFullscreen } = useFullScreen()\n    const onAbort = useAbort()\n\n    const isRemoteDisplay = !!useRecoilValue(remoteStreamsState).find(r => r.isDisplay)\n\n    const [mediaBtnsDisabled, setMediaBtnsDisabled] = useState(false)\n\n    const iconMuted = {\n        color: theme.palette.neutralDark,\n    }\n\n    const items: ICommandBarItemProps[] = [\n        {\n            iconProps: currentMicId\n                ? { iconName: 'Microphone' }\n                : { iconName: 'MicOff', style: iconMuted },\n            onClick: () => {\n                // eslint-disable-next-line\n                const dummyDevice: any = {\n                    kind: 'audioinput',\n                }\n                setMediaBtnsDisabled(true)\n                if (!currentMicId)\n                    startUserMedia(\n                        audioDevices.length ? audioDevices[0] : dummyDevice,\n                    ).finally(() => setMediaBtnsDisabled(false))\n                else stopUserMedia('audioinput').finally(() => setMediaBtnsDisabled(false))\n            },\n            disabled: mediaBtnsDisabled,\n            buttonStyles,\n            key: 'audioToggle',\n            // iconOnly: true,\n            text: 'Audio',\n            tooltipHostProps: {\n                content: 'Toggle audio',\n                delay: 0,\n            },\n            split: true,\n            subMenuProps: !audioDevices.length\n                ? undefined\n                : {\n                      items: audioDevices.map(device => ({\n                          key: device.deviceId,\n                          text: device.label,\n                          iconProps:\n                              currentMicId === device.deviceId\n                                  ? { iconName: 'TVMonitorSelected' }\n                                  : undefined,\n                          onClick: () => {\n                              startUserMedia(device)\n                          },\n                      })),\n                  },\n        },\n        {\n            iconProps: currentCameraId\n                ? { iconName: 'Video' }\n                : { iconName: 'VideoOff', style: iconMuted },\n            onClick: () => {\n                // eslint-disable-next-line\n                const dummyDevice: any = {\n                    kind: 'videoinput',\n                }\n                setMediaBtnsDisabled(true)\n                if (!currentCameraId)\n                    startUserMedia(\n                        videoDevices.length ? videoDevices[0] : dummyDevice,\n                    ).finally(() => setMediaBtnsDisabled(false))\n                else stopUserMedia('videoinput').finally(() => setMediaBtnsDisabled(false))\n            },\n            disabled: mediaBtnsDisabled,\n            buttonStyles,\n            key: 'videoToggle',\n            // iconOnly: true,\n            text: 'Video',\n            tooltipHostProps: {\n                content: 'Toggle video',\n                delay: 0,\n            },\n            split: true,\n            subMenuProps: !videoDevices.length\n                ? undefined\n                : {\n                      items: videoDevices.map(device => ({\n                          key: device.deviceId,\n                          text: device.label,\n                          iconProps:\n                              currentCameraId === device.deviceId\n                                  ? { iconName: 'TVMonitorSelected' }\n                                  : undefined,\n                          onClick: () => {\n                              startUserMedia(device)\n                          },\n                      })),\n                  },\n        },\n        {\n            key: 'screen',\n            text: 'Screen',\n            // iconOnly: true,\n            disabled: displayMediaStatus !== 'on' && isRemoteDisplay,\n            iconProps: {\n                iconName: 'ScreenCast',\n                style: displayMediaStatus !== 'on' ? iconMuted : {},\n            },\n            tooltipHostProps: {\n                content:\n                    displayMediaStatus === 'on'\n                        ? 'Stop sharing'\n                        : !isRemoteDisplay\n                        ? 'Share your screen'\n                        : \"Someone's already sharing screen\",\n                delay: 0,\n            },\n            onClick: () => {\n                if (displayMediaStatus === 'on') stopDisplayMedia()\n                else startDisplayMedia()\n            },\n        },\n        {\n            onClick: onClickChat,\n            buttonStyles,\n            key: 'chat',\n            // iconOnly: true,\n            text: 'Chat',\n            iconProps: {\n                iconName: 'Chat',\n            },\n            tooltipHostProps: {\n                content: 'Open chats',\n                delay: 0,\n            },\n        },\n        {\n            onClick: onClickPeople,\n            buttonStyles,\n            key: 'people',\n            // iconOnly: true,\n            text: 'People',\n            iconProps: {\n                iconName: 'People',\n            },\n            tooltipHostProps: {\n                content: 'Show participants',\n                delay: 0,\n            },\n        },\n    ]\n    const overflowProps: IButtonProps = { ariaLabel: 'More commands' }\n    const overflowItems: ICommandBarItemProps[] = [\n        {\n            key: 'theme',\n            text: 'Choose theme',\n            secondaryText: themeType,\n            iconProps: { iconName: 'Contrast' },\n            subMenuProps: {\n                items: [\n                    {\n                        key: 'light',\n                        text: 'Light',\n                        className: lightOption,\n                        onClick: () => themeType === 'dark' && setTheme?.('light'),\n                    },\n                    {\n                        key: 'dark',\n                        text: 'Dark',\n                        className: darkOption,\n                        onClick: () => themeType === 'light' && setTheme?.('dark'),\n                    },\n                ],\n            },\n        },\n        {\n            key: 'fullscreen',\n            text: 'Toggle fullscreen',\n            // eslint-disable-next-line no-nested-ternary\n            secondaryText: isFullscreen === undefined ? '' : isFullscreen ? 'On' : 'Off',\n            iconProps: { iconName: 'Fullscreen' },\n            onClick: () => onClickFullscreen?.(),\n        },\n    ]\n\n    const [showInfo, setShowInfo] = useState(false)\n\n    const farItems: ICommandBarItemProps[] = [\n        {\n            // eslint-disable-next-line\n            commandBarButtonAs: ({ text, key }) => (\n                <DefaultButton\n                    onClick={() => onAbort()}\n                    text={text}\n                    key={key}\n                    styles={LeaveButtonStyles}\n                />\n            ),\n            key: 'leave',\n            text: 'Leave',\n        },\n        {\n            buttonStyles,\n            className: 'commandbar-info-button',\n            key: 'info',\n            // text: 'Info',\n            // This needs an ariaLabel since it's icon-only\n            ariaLabel: 'Info',\n            iconOnly: true,\n            iconProps: { iconName: 'Info' },\n            onClick: () => setShowInfo(!showInfo),\n        },\n    ]\n\n    const palette = themeType === 'dark' ? darkPaletteAlt : lightPaletteAlt\n    return (\n        <ThemeProvider theme={{ ...palette }}>\n            <CommandBar\n                styles={containerStyles}\n                items={items}\n                overflowItems={overflowItems}\n                overflowButtonProps={overflowProps}\n                farItems={farItems}\n                ariaLabel=\"Use left and right arrow keys to navigate between commands\"\n            />\n            {showInfo && (\n                <InfoCallout\n                    onDismiss={() => setShowInfo(false)}\n                    target=\".commandbar-info-button\"\n                    showFooter\n                />\n            )}\n        </ThemeProvider>\n    )\n}\nexport default MyCommandBar\n","/* eslint-disable @typescript-eslint/naming-convention, no-plusplus */\nexport const one = 1\n\n/* \nReturns max videobox size\nResponsive but slow to render TODO replace with faster soulution\nTaken from stackoverflow for squares,modified for rect with aspect ratio \n*/\nexport function getVideoBoxSize(\n    X: number,\n    Y: number,\n    n: number,\n    aspect_ratio = 1,\n): { x: number; y: number } {\n    // total number of tiles\n    const tile_count: number = n\n    // height of rectangle\n    const b: number = Y\n    // width of rectanlge\n    const a: number = X\n\n    // divide the area but the number of tiles to get the max area a tile could cover\n    // this optimal size for a tile will more often than not make the tiles overlap, but\n    // a tile can never be bigger than this size\n    let sizeX: number = Math.sqrt((b * a * aspect_ratio) / tile_count)\n    // find the number of whole tiles that can fit into the height\n    let numberOfPossibleWholeTilesH: number = Math.floor((b * aspect_ratio) / sizeX)\n    // find the number of whole tiles that can fit into the width\n    let numberOfPossibleWholeTilesW: number = Math.floor(a / sizeX)\n    // works out how many whole tiles this configuration can hold\n    let total: number = numberOfPossibleWholeTilesH * numberOfPossibleWholeTilesW\n\n    // if the number of number of whole tiles that the max size tile ends up with is less than the require number of\n    // tiles, make the maxSize smaller and recaluate\n    while (total < tile_count) {\n        sizeX--\n        numberOfPossibleWholeTilesH = Math.floor((b * aspect_ratio) / sizeX)\n        numberOfPossibleWholeTilesW = Math.floor(a / sizeX)\n        total = numberOfPossibleWholeTilesH * numberOfPossibleWholeTilesW\n    }\n\n    return {\n        x: sizeX,\n        y: sizeX / aspect_ratio,\n    }\n}\n\n/* eslint-disable */\nexport function transformSdp(sdp: string, bandwidth: number) {\n    // follow unfied plan, fuck older browser\n\n    const modifier = 'TIAS'\n    bandwidth = (bandwidth >>> 0) * 1000\n\n    sdp = sdp.replace(new RegExp('b=' + modifier + ':.*\\r\\n'), '')\n    sdp = sdp.replace(/(m=video.*\\r\\n)/g, `$1b=${modifier}:${bandwidth}\\r\\n`)\n\n    return sdp\n}\n\nexport const blankVideo = ({ width = 640, height = 480 } = {}) => {\n    const canvas = Object.assign(document.createElement('canvas'), { width, height })\n    canvas.getContext('2d')?.fillRect(0, 0, width, height)\n    const stream = (canvas as any).captureStream() as MediaStream\n    return Object.assign(stream.getVideoTracks()[0], { enabled: false })\n}\n\nexport const silence = () => {\n    const ctx = new AudioContext()\n    const oscillator = ctx.createOscillator()\n    const dst = oscillator.connect(ctx.createMediaStreamDestination())\n    oscillator.start()\n    const stream = (dst as any).stream as MediaStream\n    const track = Object.assign(stream.getAudioTracks()[0], { enabled: false })\n    track.stop()\n    return track\n}\n\n/* eslint-enable */\n","/* eslint-disable no-underscore-dangle */\nimport { FunctionComponent, useCallback, useEffect, useRef } from 'react'\nimport { useRecoilState, useRecoilValue, useSetRecoilState } from 'recoil'\nimport Peer from 'simple-peer'\nimport {\n    addMessageSelector,\n    addRemoteStreamsSelector,\n    displayStreamState,\n    Message,\n    PeerData,\n    preferencesState,\n    RemoteStream,\n    remoteStreamsState,\n    socketState,\n    userStreamState,\n} from '../../atoms'\nimport toast, { Timeout, ToastType } from '../../comps/toast'\nimport { MoozPeer } from '../../react-app-env'\nimport { blankVideo, transformSdp } from '../../utils/helpers'\nimport { MAX_BANDWIDTH, MIN_BANDWIDTH } from '../../utils/settings'\n\ninterface SignalMessage {\n    from: string\n    signal?: any // eslint-disable-line @typescript-eslint/no-explicit-any\n}\n\ninterface PeerProps extends Peer.Options {\n    partnerId: string\n    partnerName?: string\n}\n\ninterface PeerInternals extends Peer.Instance {\n    _remoteStreams?: MediaStream[]\n    _remoteTracks?: {\n        stream: MediaStream\n        track: MediaStreamTrack\n    }[]\n    _connected?: boolean\n}\n\ntype ErrorCodes =\n    | 'ERR_WEBRTC_SUPPORT'\n    | 'ERR_CREATE_OFFER'\n    | 'ERR_CREATE_ANSWER'\n    | 'ERR_SET_LOCAL_DESCRIPTION'\n    | 'ERR_SET_REMOTE_DESCRIPTION'\n    | 'ERR_ADD_ICE_CANDIDATE'\n    | 'ERR_ICE_CONNECTION_FAILURE'\n    | 'ERR_SIGNALING'\n    | 'ERR_DATA_CHANNEL'\n    | 'ERR_CONNECTION_FAILURE'\n\ninterface PeerError {\n    code: ErrorCodes\n}\n\nconst createSdpTransform = (badwidth: number) => (sdp: string) => transformSdp(sdp, badwidth)\n\nconst PeerComponent: FunctionComponent<PeerProps> = props => {\n    const addMessage = useSetRecoilState(addMessageSelector)\n    const addRemoteStreams = useSetRecoilState(addRemoteStreamsSelector)\n    const preferences = useRecoilValue(preferencesState)\n    const { partnerId, partnerName, ...opts } = props\n    const [remoteStreams, setRemoteStreams] = useRecoilState(remoteStreamsState)\n    const remoteStreamRef = useRef(new MediaStream())\n    const userStream = useRecoilValue(userStreamState)\n    const displayStream = useRecoilValue(displayStreamState)\n\n    const socket = useRecoilValue(socketState)\n\n    const peerRef = useRef<Peer.Instance>()\n    if (!peerRef.current) {\n        const LEN = (window.moozPeers?.length || 0) + 1\n        let bandwidth = MAX_BANDWIDTH / Math.sqrt(LEN)\n        if (bandwidth < MIN_BANDWIDTH) bandwidth = MIN_BANDWIDTH\n        peerRef.current = new Peer({\n            // eslint-disable-next-line\n            sdpTransform: createSdpTransform(bandwidth) as any,\n            ...opts,\n        })\n    }\n\n    const saveInstance = () => {\n        const peer = peerRef.current as Peer.Instance\n        const moozPeer: MoozPeer = { peer, partnerId }\n        if (!window.moozPeers) window.moozPeers = [moozPeer]\n\n        // remove old copy\n        window.moozPeers = window.moozPeers.filter(p => p.partnerId !== partnerId)\n\n        // update\n        window.moozPeers.push(moozPeer)\n    }\n    saveInstance()\n\n    const onMetaData = useCallback(\n        (data: string) => {\n            try {\n                const data2: PeerData = JSON.parse(data)\n                if (data2?.metadata?.state === 'NO_STREAM') {\n                    remoteStreamRef.current.getTracks().forEach(t => {\n                        t.stop()\n                        remoteStreamRef.current.removeTrack(t)\n                    })\n                    setRemoteStreams(remoteStreams.filter(r => r.partnerId !== partnerId))\n                }\n                // if (data.metadata?.state === 'ONLY_DISPLAY') {\n\n                // }\n            } catch (err) {\n                // consoel.err\n            }\n        },\n        [remoteStreams, setRemoteStreams, partnerId],\n    )\n\n    const onRemoteStream = useCallback(\n        (stream: MediaStream, dontStopPrev?: boolean) => {\n            // console.log('onstream', dontStopPrev, stream.getTracks())\n            const remoteStream = remoteStreamRef.current\n            console.log(stream)\n            console.log(dontStopPrev)\n            // remove prev tracks\n            if (!dontStopPrev) {\n                remoteStream.getTracks().forEach(t => {\n                    if (t.kind === 'video') t.stop()\n                    remoteStream.removeTrack(t)\n                })\n            }\n            const toAdd: RemoteStream[] = []\n\n            // check for display stream\n            const videoTracks = stream.getVideoTracks()\n            const displayTrack = videoTracks[1] as MediaStreamTrack | undefined // TODO 1?\n\n            if (displayTrack) {\n                stream.removeTrack(displayTrack)\n                const rdStream = new MediaStream([displayTrack])\n                // if this track already exists in dispay stream, return\n                if (\n                    remoteStreams.find(\n                        rs =>\n                            rs.isDisplay &&\n                            rs.partnerId === partnerId &&\n                            rs.stream\n                                .getVideoTracks()\n                                .find(\n                                    vt =>\n                                        vt.id === displayTrack.id &&\n                                        vt.enabled &&\n                                        vt.readyState === 'live',\n                                ),\n                    )\n                )\n                    return\n                // push new one\n                toAdd.push({ stream: rdStream, isDisplay: true, partnerId, partnerName })\n            }\n\n            // add new tracks\n            stream.getTracks().forEach(t => {\n                if (dontStopPrev && remoteStream.getTracks().find(rt => rt.id === t.id)) return\n                remoteStream.addTrack(t)\n            })\n\n            toAdd.unshift({\n                stream: remoteStream,\n                partnerId,\n                partnerName,\n            })\n\n            addRemoteStreams(toAdd)\n        },\n        [addRemoteStreams, remoteStreams, partnerId, partnerName],\n    )\n\n    // Just to make sure that every track is loaded\n    const onTrack = useCallback(\n        (track: MediaStreamTrack, stream: MediaStream) => {\n            const pr = window.moozPeers?.find(p => p.partnerId === partnerId)?.peer as\n                | PeerInternals\n                | undefined\n\n            const currStream = pr?._remoteStreams?.find(r => r.active)\n            if (!currStream || currStream.id !== stream.id) return\n            // proceed only for tracks belonging to currently active stream\n\n            // let tr = currStream\n            //     .getTracks()\n            //     .filter(t => t.enabled && t.readyState === 'live')\n            let tr =\n                pr?._remoteTracks\n                    ?.filter(({ stream: s }) => s.id === currStream.id)\n                    .map(o => o.track)\n                    .filter(t => t.enabled && t.readyState === 'live') || []\n\n            if (!tr.find(t => t.id === track.id)) {\n                tr = tr.concat(track)\n            }\n\n            const compTr = [\n                ...remoteStreamRef.current.getTracks(),\n                remoteStreams\n                    .find(r => r.isDisplay && r.partnerId === partnerId)\n                    ?.stream.getVideoTracks()[0],\n            ].filter(Boolean) as MediaStreamTrack[]\n\n            // console.log({ tr, compTr })\n            if (tr.length > compTr.length) {\n                const strm = new MediaStream(tr)\n                onRemoteStream(strm, true)\n            }\n        },\n        [onRemoteStream, remoteStreams, partnerId],\n    )\n\n    useEffect(() => {\n        const peer = peerRef.current as Peer.Instance\n        const onMessageRecieved = (msg: SignalMessage) => {\n            const { signal, from } = msg\n            if (signal && from === partnerId) {\n                try {\n                    peer.signal(signal)\n                } catch (err) {\n                    // console.error(err)\n                }\n            }\n        }\n        const onConnected = () => {\n            toast(`Connected with peer ${partnerName}`, { type: ToastType.success })\n        }\n        const onClose = () => {\n            toast(`Connection closed with peer ${partnerName}`, { type: ToastType.severeWarning })\n            socket.emit('person_left', { sessionId: partnerId })\n        }\n        const onError = (err: PeerError) => {\n            if (err.code === 'ERR_WEBRTC_SUPPORT') {\n                toast(`No WebRTC support, are you on grandpa's computer?`, {\n                    type: ToastType.error,\n                })\n            } else if (err.code === 'ERR_CONNECTION_FAILURE') {\n                toast(`WebRTC connection failure`, {\n                    type: ToastType.error,\n                })\n            }\n        }\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const onLocalSignal = (signal: any) => {\n            socket.send({\n                to: partnerId,\n                signal,\n            })\n        }\n        const onDataRecieved = (data: string) => {\n            try {\n                const data2: PeerData = JSON.parse(data)\n                if (data2?.message) {\n                    const msg: Message = {\n                        ...data2?.message,\n                        mine: false,\n                    }\n                    addMessage([msg])\n                    toast(`New message from ${msg?.author}: ${msg?.text}`, {\n                        type: ToastType.info,\n                    })\n                }\n            } catch (err) {\n                toast(`Peer data error`, {\n                    type: ToastType.error,\n                    autoClose: Timeout.SHORT,\n                })\n            }\n        }\n\n        peer.on('stream', onRemoteStream)\n        peer.on('signal', onLocalSignal)\n        // peer.on('data', onDataRecieved)\n        // peer.on('data', onMetaData)\n        peer.on('connect', onConnected)\n        peer.on('close', onClose)\n        peer.on('error', onError)\n        peer.on('track', onTrack)\n\n        socket.on('message', onMessageRecieved)\n\n        return () => {\n            peer.off('stream', onRemoteStream)\n            peer.off('signal', onLocalSignal)\n            peer.off('connect', onConnected)\n            peer.off('data', onDataRecieved)\n            peer.off('data', onMetaData)\n            peer.off('close', onClose)\n            peer.off('error', onError)\n            peer.off('track', onTrack)\n\n            socket.off('message', onMessageRecieved)\n        }\n    }, [onRemoteStream, socket, partnerId, addMessage, onMetaData, onTrack, partnerName])\n\n    useEffect(() => {\n        const peer = peerRef.current as Peer.Instance\n\n        const displayVideoTracks = displayStream?.getVideoTracks()\n        const tracks = [...(userStream?.getTracks() || []), ...(displayVideoTracks || [])]\n        // hack so that the other end detects display stream\n        if (displayVideoTracks?.length && !userStream?.getVideoTracks().length) {\n            tracks.unshift(blankVideo())\n        }\n        const stream = new MediaStream(tracks)\n        try {\n            if (!tracks.length) {\n                const msg: PeerData = { metadata: { state: 'NO_STREAM' } }\n                peer.send(JSON.stringify(msg))\n            } else {\n                peer.addStream(stream)\n            }\n        } catch (err) {\n            // console.error(err)\n        }\n        return () => {\n            try {\n                peer.removeStream(stream)\n            } catch (err) {\n                // console.error(err)\n            }\n        }\n    }, [userStream, displayStream])\n\n    // send proposal to partner to join\n    useEffect(() => {\n        if (!opts.initiator) {\n            socket.send({\n                to: partnerId,\n                proposal: true,\n                name: preferences.name,\n            })\n        }\n    }, []) // eslint-disable-line\n\n    // destroy peer and remote stream when component exits\n    useEffect(\n        () => () => {\n            peerRef.current?.destroy()\n            remoteStreamRef.current.getTracks().forEach(t => {\n                t.stop()\n                remoteStreamRef.current.removeTrack(t)\n            })\n        },\n        [],\n    )\n\n    return null\n}\n\nexport default PeerComponent\n","import type { FunctionComponent } from 'react'\nimport { useCallback, useEffect } from 'react'\nimport { useRecoilState, useRecoilValue, useSetRecoilState } from 'recoil'\nimport {\n    addConnectionsSelector,\n    Connection,\n    removeConnectionsSelector,\n    socketState,\n} from '../../atoms'\nimport toast from '../../comps/toast'\nimport Peer from './peer'\n\nconst Connections: FunctionComponent = () => {\n    const addConnections = useSetRecoilState(addConnectionsSelector)\n    const [connections, removeConnections] = useRecoilState(removeConnectionsSelector)\n    const socket = useRecoilValue(socketState)\n\n    console.log('Connection index file...')\n    console.log(socket)\n    console.log(connections)\n    console.log('Connection index file...')\n\n    const onPersonJoined = useCallback(\n        (data: { sessionId: string; name: string }) => {\n            const { sessionId: partnerId, name: partnerName } = data\n            const connection: Connection = {\n                partnerId,\n                partnerName,\n                initiator: false,\n            }\n            // setConnections(connections.concat(connection))\n            addConnections([connection])\n        },\n        [addConnections],\n    )\n\n    const onMessage = useCallback(\n        ({ proposal, from, name: partnerName }) => {\n            if (proposal) {\n                const connection: Connection = {\n                    partnerId: from,\n                    initiator: true,\n                    partnerName,\n                }\n                // setConnections(connections.concat(connection))\n                addConnections([connection])\n            }\n        },\n        [addConnections],\n    )\n\n    const onPersonLeft = useCallback(\n        ({ sessionId }) => {\n            const conn = connections.find(c => c.partnerId === sessionId)\n            if (conn) toast(`${conn?.partnerName} left the meeting`)\n            // setConnections(connections.filter(p => p.partnerId !== socketId))\n            removeConnections(connections.filter(c => c.partnerId === sessionId))\n        },\n        [removeConnections, connections],\n    )\n\n    useEffect(() => {\n        socket.on('person_joined', onPersonJoined)\n        return () => {\n            socket.off('person_joined', onPersonJoined)\n        }\n    }, [onPersonJoined, socket])\n\n    useEffect(() => {\n        socket.on('message', onMessage)\n        return () => {\n            socket.off('message', onMessage)\n        }\n    }, [onMessage, socket])\n\n    useEffect(() => {\n        socket.on('person_left', onPersonLeft)\n        return () => {\n            socket.off('person_left', onPersonLeft)\n        }\n    }, [onPersonLeft, socket])\n\n    return (\n        <>\n            {connections.map(conn => (\n                <Peer\n                    key={conn.partnerId}\n                    partnerName={conn.partnerName}\n                    initiator={conn.initiator}\n                    partnerId={conn.partnerId}\n                />\n            ))}\n        </>\n    )\n}\n\nexport default Connections\n","import {\n    FontSizes,\n    FontWeights,\n    IModalStyles,\n    IPanelStyles,\n    IPivotStyles,\n    makeStyles,\n    mergeStyles,\n} from '@fluentui/react'\n\nexport const vFluid = mergeStyles({\n    height: '100%',\n})\n\nexport const vScroll = mergeStyles({\n    height: '100%',\n    overflowY: 'auto',\n    overflowX: 'hidden',\n})\nexport const heading = mergeStyles({\n    margin: '.15em .5em',\n    fontWeight: FontWeights.semilight,\n})\nexport const fluid = mergeStyles({\n    width: '100%',\n})\nexport const pivotContainer = mergeStyles({\n    display: 'flex',\n    flexDirection: 'column-reverse',\n    height: '100%',\n})\nexport const pivotStyles: Partial<IPivotStyles> = {\n    root: {\n        height: '44px',\n        display: 'flex',\n        justifyContent: 'center',\n        margin: '.25em',\n    },\n    itemContainer: {\n        height: 'calc(100% - 44px) ',\n        '& > div': {\n            height: '100%',\n        },\n    },\n}\nexport const panelStyles: Partial<IPanelStyles> = {\n    scrollableContent: {\n        display: 'flex',\n        flexDirection: 'column',\n        // will use pivot body scroll\n        height: '100%',\n        overflow: 'hidden',\n    },\n    content: {\n        display: 'flex',\n        flexDirection: 'column',\n        height: '100%',\n        padding: '.25em',\n    },\n}\n\nexport const message = mergeStyles({\n    height: '100%',\n    fontSize: FontSizes.xLarge,\n    fontWeight: FontWeights.semilight,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: '.25em',\n    textAlign: 'center',\n})\n\nexport const useModalClassnames = makeStyles(theme => ({\n    container: {\n        display: 'flex',\n        flexFlow: 'column nowrap',\n        alignItems: 'stretch',\n        maxWidth: '700px',\n        maxHeight: '500px',\n    },\n    header: [\n        {\n            flex: '1 1 auto',\n            borderTop: `4px solid ${theme.palette.themePrimary}`,\n            color: theme.palette.neutralPrimary,\n            display: 'flex',\n            alignItems: 'center',\n            padding: '.25em .75em',\n            cursor: 'move',\n            fontWeight: FontWeights.semilight,\n            fontSize: FontSizes.xxLarge,\n        },\n    ],\n    body: {\n        flex: '4 4 auto',\n        padding: '0 1em',\n        overflowY: 'auto',\n        height: '100%',\n        width: '500px',\n    },\n}))\nexport const modalStyles: Partial<IModalStyles> = {\n    scrollableContent: {\n        display: 'flex',\n        flexDirection: 'column',\n        height: '100%',\n    },\n}\nexport const useCloseButtonStyles = makeStyles(theme => ({\n    root: {\n        color: theme.palette.neutralPrimary,\n        marginLeft: 'auto',\n        marginTop: '4px',\n        marginRight: '2px',\n    },\n    rootHovered: {\n        color: theme.palette.neutralDark,\n    },\n}))\n\nexport const searchbox = mergeStyles({\n    margin: '.5em auto',\n    width: '100%',\n})\n","import {\n    FontSizes,\n    FontWeights,\n    makeStyles,\n    mergeStyles,\n    mergeStyleSets,\n    SharedColors,\n} from '@fluentui/react'\nimport { CSSProperties } from 'react'\n\nexport const fluid = mergeStyles({\n    width: '100%',\n})\nexport const messages = mergeStyleSets({\n    container: {\n        padding: '.25em',\n        width: '100%',\n        height: '100%',\n        overflowY: 'auto',\n    },\n    children: {\n        overflowY: 'auto',\n        width: '100%',\n        height: '100%',\n    },\n    type: {\n        overflowY: 'auto',\n        overflowX: 'hidden',\n        width: '100%',\n        maxHeight: '100%',\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'flex-end',\n        padding: '.5em 0',\n    },\n    info: {\n        fontWeight: FontWeights.semilight,\n        textAlign: 'center',\n    },\n})\n\nexport const useMessageStyles = makeStyles(theme => ({\n    container: {\n        width: '100%',\n        margin: '.25em 0',\n        display: 'flex',\n        flexDirection: 'row',\n        position: 'relative',\n    },\n    message: {\n        backgroundColor: theme.palette.neutralQuaternary,\n        display: 'flex',\n        flexDirection: 'column',\n        padding: '.5em 1em',\n        borderRadius: '1px',\n    },\n    title: {\n        fontWeight: FontWeights.light,\n        fontSize: FontSizes.small,\n        fontFamily: 'monospace',\n        width: '200px',\n        textOverflow: 'ellipsis',\n    },\n    text: {\n        maxWidth: '100%',\n        wordBreak: 'break-word',\n    },\n}))\n\nexport const myMessageStyle: CSSProperties = {\n    backgroundColor: SharedColors.cyanBlue10,\n    marginLeft: 'auto',\n    color: 'white',\n}\n","import { FunctionComponent } from 'react'\nimport { Text } from '@fluentui/react'\nimport { myMessageStyle, useMessageStyles } from './styles'\n\nexport interface MessageProps {\n    text: string\n    mine?: boolean\n    title?: string\n}\n\nconst Message: FunctionComponent<MessageProps> = ({ mine, text, title }) => {\n    const styles = useMessageStyles()\n    return (\n        <div className={styles.container}>\n            <div style={mine ? myMessageStyle : undefined} className={styles.message}>\n                <Text className={styles.title} block nowrap>\n                    {title}\n                </Text>\n                <div className={styles.text}>{text}</div>\n            </div>\n        </div>\n    )\n}\n\nexport default Message\n","import { TextField, IconButton, Stack } from '@fluentui/react'\nimport { nanoid } from 'nanoid'\nimport { FunctionComponent, useCallback, useEffect, useRef, useState } from 'react'\nimport { useRecoilValue, useSetRecoilState } from 'recoil'\nimport { messages, fluid } from './styles'\nimport { addMessageSelector, Message, preferencesState } from '../../atoms'\n\nconst Messages: FunctionComponent = ({ children }) => {\n    const addMessage = useSetRecoilState(addMessageSelector)\n    const { name } = useRecoilValue(preferencesState)\n    const [message, setMessage] = useState('')\n\n    const scrolling = useRef<HTMLDivElement>(null)\n    const scrollToBottom = () => {\n        const s = scrolling.current\n        s?.scrollTo(0, s?.scrollHeight)\n    }\n    useEffect(() => {\n        scrollToBottom()\n    }, [children])\n\n    const handleSubmit = useCallback(() => {\n        if (!message.trim()) return\n        const msg: Message = {\n            id: nanoid(),\n            mine: true,\n            text: message,\n            author: name,\n        }\n        addMessage([msg])\n        setMessage('')\n    }, [message, addMessage, name])\n    return (\n        <Stack verticalFill verticalAlign=\"space-between\" className={messages.container}>\n            <div ref={scrolling} className={messages.children}>\n                {children}\n            </div>\n            <Stack.Item disableShrink className={messages.type}>\n                <TextField\n                    className={fluid}\n                    multiline\n                    autoAdjustHeight\n                    placeholder=\"Type message\"\n                    value={message}\n                    onChange={(_, val) => val !== undefined && setMessage(val)}\n                    onKeyPress={e => {\n                        if (e.shiftKey && e.key === 'Enter') handleSubmit()\n                    }}\n                />\n                <IconButton\n                    onClick={handleSubmit}\n                    title=\"Send (shift+enter)\"\n                    iconProps={{ iconName: 'Send' }}\n                />\n            </Stack.Item>\n        </Stack>\n    )\n}\n\nexport default Messages\n","import { Stack, DefaultButton, Modal, ContextualMenu, IconButton } from '@fluentui/react'\nimport { useCallback, useState } from 'react'\nimport type { FunctionComponent } from 'react'\nimport { useRecoilValue } from 'recoil'\nimport {\n    message,\n    useCloseButtonStyles,\n    useModalClassnames,\n    modalStyles,\n    vFluid,\n    vScroll,\n} from './styles'\nimport { messagesState } from '../../atoms'\nimport { Message, Messages } from '../../comps/chat'\n\ninterface ChatPanelProps {\n    setPanel?: (arg0: 'people' | 'chat' | '') => void\n}\n\nconst ChatPanel: FunctionComponent<ChatPanelProps> = ({ setPanel }) => {\n    const messages = useRecoilValue(messagesState)\n    const [isModalled, setIsModalled] = useState(false)\n    const modalClassnames = useModalClassnames()\n    const closeButtonStyles = useCloseButtonStyles()\n    const isMobile = window.matchMedia('(max-width: 480px)').matches\n    const onRenderChatContent = useCallback(\n        () => (\n            <Messages>\n                {messages.map(msg => (\n                    <Message key={msg.id} title={msg.author} text={msg.text} mine={msg.mine} />\n                ))}\n                {!messages.length && <div className={message}>Chat is empty</div>}\n            </Messages>\n        ),\n        [messages],\n    )\n    const onRenderModal = useCallback(\n        () => (\n            <Modal\n                styles={modalStyles}\n                allowTouchBodyScroll\n                titleAriaId=\"chat-modal-title\"\n                isOpen={isModalled}\n                onDismiss={() => setIsModalled(false)}\n                isModeless\n                containerClassName={modalClassnames.container}\n                dragOptions={{\n                    moveMenuItemText: 'Move',\n                    closeMenuItemText: 'Close',\n                    menu: ContextualMenu,\n                    dragHandleSelector: '#chat-modal-header',\n                }}\n            >\n                <div id=\"chat-modal-header\" className={modalClassnames.header}>\n                    <span id=\"chat-modal-title\">Chat</span>\n                    <IconButton\n                        title=\"Minimize\"\n                        styles={closeButtonStyles}\n                        iconProps={{ iconName: 'Cancel' }}\n                        ariaLabel=\"Minimize chat modal\"\n                        onClick={() => setIsModalled(false)}\n                    />\n                </div>\n\n                <div className={modalClassnames.body}>{onRenderChatContent()}</div>\n            </Modal>\n        ),\n        [isModalled, onRenderChatContent, modalClassnames, closeButtonStyles],\n    )\n    return (\n        <Stack verticalAlign=\"center\" className={vFluid}>\n            {/* Undock button */}\n            {!isModalled && !isMobile && (\n                <IconButton\n                    title=\"Undock\"\n                    onClick={() => {\n                        setPanel?.('')\n                        setIsModalled(true)\n                    }}\n                    text=\"Undock\"\n                    iconProps={{ iconName: 'MiniExpandMirrored' }}\n                    style={{ margin: '.25em auto' }}\n                />\n            )}\n\n            {/* Chat content */}\n            {!isModalled && <Stack.Item className={vScroll}>{onRenderChatContent()}</Stack.Item>}\n\n            {/* Modal */}\n            {isModalled && (\n                <Stack verticalAlign=\"center\" horizontalAlign=\"center\" className={message}>\n                    Chats are open in floating Modal\n                    <DefaultButton\n                        onClick={() => setIsModalled(false)}\n                        text=\"Open chats here\"\n                        style={{ marginTop: '.5em' }}\n                    />\n                </Stack>\n            )}\n            {onRenderModal()}\n        </Stack>\n    )\n}\n\nexport default ChatPanel\n","import { ReactText, useCallback, useEffect, useRef, useState } from 'react'\nimport {\n    Stack,\n    Persona,\n    List,\n    PersonaPresence,\n    useTheme,\n    PersonaSize,\n    IconButton,\n    ContextualMenu,\n    ContextualMenuItemType,\n    DefaultButton,\n} from '@fluentui/react'\nimport { useRecoilValue } from 'recoil'\nimport type { FunctionComponent } from 'react'\nimport { vFluid, vScroll, message } from './styles'\nimport { Connection, connectionsState } from '../../atoms'\nimport InfoCallout from '../../comps/info-callout'\nimport toast, { dismissToast, Timeout, ToastType } from '../../comps/toast'\n\nconst PersonComponent: FunctionComponent<{ item?: Connection; index?: number }> = ({\n    index,\n    item,\n}) => {\n    const [mouseEvent, setMouseEvent] = useState<MouseEvent | null>(null)\n    const theme = useTheme()\n    const [presence, setPresence] = useState(PersonaPresence.away)\n    useEffect(() => {\n        const onConnected = () => setPresence(PersonaPresence.online)\n        const onClose = () => setPresence(PersonaPresence.offline)\n        const { peer } = window.moozPeers?.find(p => p.partnerId === item?.partnerId) || {}\n        peer?.on('connect', onConnected)\n        peer?.on('close', onClose)\n        return () => {\n            peer?.off('connect', onConnected)\n            peer?.off('close', onClose)\n        }\n    }, [item])\n    if (!item || index === undefined) return null\n    const showNotImplemented = () => {\n        toast('Not Implemented yet', { autoClose: Timeout.SHORT, type: ToastType.severeWarning })\n    }\n    return (\n        <>\n            <Stack\n                key={item.partnerId}\n                onContextMenu={e => {\n                    e.preventDefault()\n                    // eslint-disable-next-line\n                    setMouseEvent(e as any)\n                }}\n                styles={{\n                    root: {\n                        padding: '.5em .75em',\n                        cursor: 'default',\n                        ':hover': {\n                            backgroundColor: theme.semanticColors.listItemBackgroundHovered,\n                        },\n                    },\n                }}\n                horizontal\n                horizontalAlign=\"space-between\"\n            >\n                <Persona\n                    presence={presence}\n                    text={item.partnerName || `<${item.partnerId}>`}\n                    secondaryText=\"Online\"\n                    size={PersonaSize.size32}\n                />\n                <IconButton\n                    onClick={e => {\n                        // eslint-disable-next-line\n                        setMouseEvent(e as any)\n                    }}\n                    iconProps={{ iconName: 'More' }}\n                />\n            </Stack>\n            <ContextualMenu\n                items={[\n                    {\n                        key: 'header1',\n                        itemType: ContextualMenuItemType.Header,\n                        text: item.partnerName,\n                    },\n                    {\n                        key: 'mute',\n                        text: 'Mute',\n                        iconProps: { iconName: 'MicOff' },\n                        onClick: showNotImplemented,\n                    },\n                    {\n                        key: 'hide',\n                        text: 'Hide',\n                        iconProps: { iconName: 'VideoOff' },\n                        onClick: showNotImplemented,\n                    },\n                    {\n                        key: 'divider1',\n                        itemType: ContextualMenuItemType.Divider,\n                    },\n                    {\n                        key: 'kick',\n                        text: 'Kick out',\n                        iconProps: { iconName: 'SignOut' },\n                        onClick: showNotImplemented,\n                    },\n                ]}\n                onDismiss={() => {\n                    setMouseEvent(null)\n                }}\n                hidden={!mouseEvent}\n                target={mouseEvent}\n            />\n        </>\n    )\n}\n\nconst PeoplePanel: FunctionComponent = () => {\n    const connections = useRecoilValue(connectionsState)\n    const onRenderPerson = useCallback(\n        (item?: Connection, index?: number) => <PersonComponent item={item} index={index} />,\n        [],\n    )\n    const [showInfo, setShowInfo] = useState(false)\n    const aloneToast = useRef<ReactText>()\n    useEffect(() => {\n        if (!connections.length && !aloneToast.current)\n            aloneToast.current = toast(\n                'You are curently alone 💩, make some friends and then invite them!',\n                {\n                    autoClose: Timeout.PERSIST,\n                    type: ToastType.info,\n                },\n            )\n        else if (connections.length && aloneToast.current) {\n            if (aloneToast.current) {\n                dismissToast(aloneToast.current)\n                aloneToast.current = undefined\n            }\n        }\n    }, [connections])\n    useEffect(\n        () => () => {\n            if (aloneToast.current) dismissToast(aloneToast.current)\n        },\n        [],\n    )\n    return (\n        <Stack verticalAlign=\"center\" className={vFluid}>\n            {!connections.length ? (\n                <div className={message}>\n                    <span>You are currently alone right now, invite some people to join</span>\n                    <DefaultButton\n                        onClick={() => setShowInfo(!showInfo)}\n                        text=\"Info\"\n                        className=\"info-button-in-person-list\"\n                        style={{ marginTop: '.5em' }}\n                    />\n                </div>\n            ) : (\n                <Stack className={vFluid} horizontalAlign=\"center\">\n                    <DefaultButton\n                        onClick={() => setShowInfo(!showInfo)}\n                        text=\"Info\"\n                        className=\"info-button-in-person-list\"\n                        style={{ marginBottom: '.5em' }}\n                    />\n                    <List\n                        style={{ width: '100%' }}\n                        className={vScroll}\n                        items={connections}\n                        onRenderCell={onRenderPerson}\n                    />\n                </Stack>\n            )}\n            {showInfo && (\n                <InfoCallout\n                    onDismiss={() => setShowInfo(false)}\n                    target=\".info-button-in-person-list\"\n                />\n            )}\n        </Stack>\n    )\n}\n\nexport default PeoplePanel\n","import { useCallback } from 'react'\nimport { Panel, Pivot, PivotItem, Stack } from '@fluentui/react'\nimport type { IRenderFunction, IPanelProps } from '@fluentui/react'\nimport ChatPanel from './chat'\nimport PeoplePanel from './people'\nimport { fluid, heading, panelStyles, pivotContainer, pivotStyles } from './styles'\n\ntype IPanelHeaders = 'people' | 'chat' | ''\n\ninterface SidePanelProps {\n    onDismiss: () => void\n    panel: IPanelHeaders\n    setPanel: (arg0: IPanelHeaders) => void\n}\n\nconst SidePanel: React.FunctionComponent<SidePanelProps> = ({ panel, onDismiss, setPanel }) => {\n    const title = panel && panel[0].toLocaleUpperCase() + panel.slice(1)\n    const onRenderNavigationContent: IRenderFunction<IPanelProps> = useCallback(\n        (props, defaultRender) => (\n            <Stack className={fluid} horizontal horizontalAlign=\"space-between\">\n                <h1 className={heading}>{title}</h1>\n                {defaultRender?.(props)}\n            </Stack>\n        ),\n        [title],\n    )\n    return (\n        <div>\n            <Panel\n                styles={panelStyles}\n                onRenderNavigationContent={onRenderNavigationContent}\n                isHiddenOnDismiss\n                // this prop makes the panel non-modal\n                isBlocking={false}\n                isOpen={!!panel}\n                onDismiss={onDismiss}\n                closeButtonAriaLabel=\"Close\"\n                isFooterAtBottom // for gull height\n            >\n                <Pivot\n                    selectedKey={panel}\n                    onLinkClick={item => {\n                        const key = item?.props.itemKey as IPanelHeaders\n                        if (key) setPanel(key)\n                    }}\n                    className={pivotContainer}\n                    styles={pivotStyles}\n                    aria-label=\"Switch between Chat and People list\"\n                >\n                    <PivotItem alwaysRender itemKey=\"people\" itemIcon=\"People\" headerText=\"People\">\n                        <PeoplePanel />\n                    </PivotItem>\n                    <PivotItem alwaysRender itemKey=\"chat\" itemIcon=\"Chat\" headerText=\"Chat\">\n                        <ChatPanel setPanel={setPanel} />\n                    </PivotItem>\n                </Pivot>\n            </Panel>\n        </div>\n    )\n}\nexport default SidePanel\n","import { IModalStyles, mergeStyles } from '@fluentui/react'\n\nconst AR = 4 / 3\n\nexport const container = mergeStyles({\n    height: 'calc(100vh - 40px)',\n    display: 'flex',\n    overflowY: 'auto',\n    width: '100%',\n})\nexport const gridContainer = mergeStyles({\n    display: 'flex',\n    margin: 'auto',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexWrap: 'wrap',\n    width: '100%',\n})\n\nexport const mediaContainer = mergeStyles({\n    position: 'fixed',\n    bottom: 0,\n    height: 200 / AR,\n    width: 200,\n    zIndex: 100,\n})\n\nexport const userMediaContainer = mergeStyles(mediaContainer, {\n    right: 0,\n})\n\nexport const displayMediaContainer = mergeStyles(mediaContainer, {\n    right: 200,\n})\n\nexport const modalStyles: Partial<IModalStyles> = {\n    main: {\n        minHeight: 100,\n        minWidth: 100,\n        height: '100%',\n        maxHeight: '100%',\n        width: '100%',\n        maxWidth: '100%',\n        display: 'flex',\n    },\n}\n\nexport const pinnedContainer = mergeStyles({\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    '@media (max-width: 768px)': {\n        flexDirection: 'column',\n    },\n})\nexport const sideList = mergeStyles({\n    display: 'flex',\n    flexDirection: 'column',\n    height: '100%',\n    flexShrink: 0,\n    width: 'min-content',\n    overflowY: 'auto',\n    alignItems: 'center',\n    justifyContent: 'center',\n    '@media (max-width: 768px)': {\n        flexDirection: 'row',\n        width: '100%',\n        height: 'min-content',\n        overflowX: 'auto',\n    },\n})\n","import { useEffect, useState } from 'react'\nimport { getVideoBoxSize } from '../helpers'\n\nconst TOP_BAR_HEIGHT = 40\n\nconst useVideoSize = (N = 1, AR = 1): { x: number; y: number; X: number; Y: number } => {\n    const [size, setSize] = useState<{ X?: number; Y?: number }>({})\n    const [isMobile, setIsMobile] = useState(window.matchMedia('(max-width: 480px)').matches)\n\n    useEffect(() => {\n        const listener = (e: MediaQueryListEvent) => {\n            if (e.matches) {\n                setIsMobile(true)\n            } else {\n                setIsMobile(false)\n            }\n        }\n        window.matchMedia('(max-width: 480px)').addEventListener('change', listener)\n\n        return () => window.matchMedia('(max-width: 480px)').removeEventListener('change', listener)\n    }, [setIsMobile])\n\n    useEffect(() => {\n        const listener = () => {\n            // on mobiles, dont listen to change\n            if (isMobile) {\n                return\n            }\n            const Y = window.innerHeight - TOP_BAR_HEIGHT\n            const X = window.innerWidth\n            setSize({ X, Y })\n        }\n        // initial values\n        const Y = window.innerHeight - TOP_BAR_HEIGHT\n        const X = window.innerWidth\n        setSize({ X, Y })\n        window.addEventListener('resize', listener)\n        return () => {\n            window.removeEventListener('resize', listener)\n        }\n    }, [isMobile, setSize])\n\n    const { X = 500, Y = 800 } = size // bad defaults\n    const { x, y } = getVideoBoxSize(X, Y, N, AR)\n\n    // x = isMobile ? X : x\n    // y = isMobile ? X / AR : y\n\n    return { x, y, X, Y }\n}\n\nexport default useVideoSize\n","import { FunctionComponent, useEffect, useState } from 'react'\nimport { Stack, Modal, ContextualMenu, useTheme } from '@fluentui/react'\nimport { useRecoilValue } from 'recoil'\nimport {\n    container,\n    gridContainer,\n    userMediaContainer,\n    displayMediaContainer,\n    modalStyles,\n    pinnedContainer,\n    sideList,\n} from './styles'\nimport useSize from '../../utils/hooks/use-video-size'\nimport { userStreamState, displayStreamState, remoteStreamsState, RemoteStream } from '../../atoms'\nimport VideoBox from '../../comps/video'\n\nconst AR = 4 / 3\nconst SIDE_LIST_WIDTH = 200\n\nconst VideoBoxes: FunctionComponent = () => {\n    const theme = useTheme()\n\n    const userMedia = useRecoilValue(userStreamState)\n    const displayMedia = useRecoilValue(displayStreamState)\n    const remoteStreams = useRecoilValue(remoteStreamsState)\n\n    const [pinnedItem, setPinnedItem] = useState<RemoteStream>()\n\n    const remoteDisplay = remoteStreams.find(r => r.isDisplay)\n\n    useEffect(() => {\n        if (remoteDisplay) setPinnedItem(remoteDisplay)\n        else setPinnedItem(undefined)\n    }, [remoteDisplay])\n\n    const { x, y, X } = useSize(remoteStreams.length, AR)\n\n    return (\n        <div style={{ backgroundColor: theme.semanticColors.bodyBackground }} className={container}>\n            {/* Grid view */}\n            {!pinnedItem && (\n                <div className={gridContainer}>\n                    {remoteStreams.map(({ stream, partnerName }) => (\n                        <Stack\n                            key={stream.id}\n                            style={{\n                                height: y,\n                                maxWidth: x,\n                            }}\n                        >\n                            <VideoBox label={partnerName} stream={stream} />\n                        </Stack>\n                    ))}\n                </div>\n            )}\n            {/* Pinned View */}\n            {pinnedItem && (\n                <div className={pinnedContainer}>\n                    <Stack\n                        disableShrink\n                        verticalFill\n                        key={pinnedItem.stream.id}\n                        style={{\n                            width: X > 768 ? X - SIDE_LIST_WIDTH : X,\n                        }}\n                    >\n                        <VideoBox label={pinnedItem.partnerName} stream={pinnedItem.stream} />\n                    </Stack>\n                    <div className={sideList}>\n                        {remoteStreams\n                            .filter(r => !r.isDisplay || r.partnerId !== pinnedItem.partnerId)\n                            .map(({ stream, partnerName }) => (\n                                <Stack\n                                    key={stream.id}\n                                    style={{\n                                        height: SIDE_LIST_WIDTH / AR,\n                                        width: SIDE_LIST_WIDTH,\n                                    }}\n                                >\n                                    <VideoBox stream={stream} label={partnerName} />\n                                </Stack>\n                            ))}\n                    </div>\n                </div>\n            )}\n\n            <div className={userMediaContainer} id=\"user-media-container\" />\n            <div className={displayMediaContainer} id=\"display-media-container\" />\n            {displayMedia && (\n                <Modal\n                    isBlocking\n                    isModeless\n                    isOpen\n                    styles={modalStyles}\n                    layerProps={{\n                        hostId: 'display-media-container',\n                    }}\n                    dragOptions={{\n                        moveMenuItemText: 'Move',\n                        closeMenuItemText: 'Close',\n                        menu: ContextualMenu,\n                    }}\n                >\n                    <VideoBox\n                        muted\n                        stream={displayMedia}\n                        label=\"You are sharing your screen\"\n                        noContextualMenu\n                    />\n                </Modal>\n            )}\n            {userMedia && (\n                <Modal\n                    isBlocking\n                    isModeless\n                    isOpen\n                    styles={modalStyles}\n                    layerProps={{\n                        hostId: 'user-media-container',\n                    }}\n                    dragOptions={{\n                        moveMenuItemText: 'Move',\n                        closeMenuItemText: 'Close',\n                        menu: ContextualMenu,\n                    }}\n                >\n                    <VideoBox muted stream={userMedia} label=\"You\" noContextualMenu />\n                </Modal>\n            )}\n        </div>\n    )\n}\n\nexport default VideoBoxes\n","import type { FunctionComponent } from 'react'\nimport { useEffect, useState } from 'react'\nimport { useRecoilValue } from 'recoil'\nimport { roomState } from '../atoms'\nimport Fullscreen from '../comps/full-screen'\nimport CommanBar from './command-bar'\nimport Connections from './connections'\nimport SidePanel from './side-panel'\nimport VideoBoxes from './video-boxes'\n\nconst App: FunctionComponent = () => {\n    const room = useRecoilValue(roomState)\n    const [panel, setPanel] = useState<'people' | 'chat' | ''>('')\n    const [fullscreen, setFullscreen] = useState(false)\n\n    const onClickChat = () => (panel !== 'chat' ? setPanel('chat') : setPanel(''))\n    const onClickPeople = () => (panel !== 'people' ? setPanel('people') : setPanel(''))\n    const onClickFullscreen = () => setFullscreen(!fullscreen)\n\n    useEffect(() => {\n        document.title =\n            room?.name || (room?.created_by && `Meeting by ${room?.created_by}`) || 'A Mooz meeting'\n        return () => {\n            document.title = 'Mooz'\n        }\n    }, [room])\n\n    return (\n        <Fullscreen on={fullscreen} dblclick fullbody>\n            <CommanBar\n                onClickFullscreen={onClickFullscreen}\n                onClickChat={onClickChat}\n                onClickPeople={onClickPeople}\n            />\n            <VideoBoxes />\n\n            <SidePanel setPanel={setPanel} panel={panel} onDismiss={() => setPanel('')} />\n\n            <Connections />\n        </Fullscreen>\n    )\n}\n\nexport default App\n"],"names":["on","fullbody","dblclick","props","ref","useRef","useEffect","fscreen","elem","current","document","body","err","toast","autoClose","Timeout","type","ToastType","handleDblClick","addEventListener","removeEventListener","buttonStyles","icon","fontSize","FontSizes","lightOption","mergeStyles","backgroundColor","NeutralColors","color","darkOption","containerStyles","root","padding","height","LeaveButtonStyles","margin","transition","rootHovered","label","fontWeight","FontWeights","callout","mergeStyleSets","container","title","secondaryTitle","footer","marginTop","textAlign","display","justifyContent","showFooter","room","useRecoilValue","roomState","link","window","location","origin","id","Callout","className","role","calloutMaxWidth","name","created_by","Label","Link","href","target","rel","onClickPeople","onClickChat","onClickFullscreen","theme","useTheme","themeType","useThemeType","setTheme","useSetTheme","currentMicId","currentMicIdState","currentCameraId","currentCameraIdState","audioDevices","audioDevicesState","videoDevices","videoDevicesState","useDisplayMedia","displayMediaStatus","startDisplayMedia","stopDisplayMedia","useUserMedia","startUserMedia","stopUserMedia","useState","setOn","listener","isFullscreen","useFullScreen","onAbort","useAbort","isRemoteDisplay","remoteStreamsState","find","r","isDisplay","mediaBtnsDisabled","setMediaBtnsDisabled","iconMuted","palette","neutralDark","items","iconProps","iconName","style","onClick","finally","length","kind","disabled","key","text","tooltipHostProps","content","delay","split","subMenuProps","map","device","deviceId","undefined","overflowItems","secondaryText","showInfo","setShowInfo","farItems","commandBarButtonAs","DefaultButton","styles","ariaLabel","iconOnly","darkPaletteAlt","lightPaletteAlt","ThemeProvider","CommandBar","overflowButtonProps","onDismiss","getVideoBoxSize","X","Y","n","aspect_ratio","tile_count","b","a","sizeX","Math","sqrt","numberOfPossibleWholeTilesH","floor","numberOfPossibleWholeTilesW","total","x","y","createSdpTransform","badwidth","sdp","bandwidth","modifier","replace","RegExp","transformSdp","addMessage","useSetRecoilState","addMessageSelector","addRemoteStreams","addRemoteStreamsSelector","preferences","preferencesState","partnerId","partnerName","opts","useRecoilState","remoteStreams","setRemoteStreams","remoteStreamRef","MediaStream","userStream","userStreamState","displayStream","displayStreamState","socket","socketState","peerRef","LEN","moozPeers","MAX_BANDWIDTH","MIN_BANDWIDTH","Peer","sdpTransform","moozPeer","peer","filter","p","push","saveInstance","onMetaData","useCallback","data","data2","JSON","parse","metadata","state","getTracks","forEach","t","stop","removeTrack","onRemoteStream","stream","dontStopPrev","remoteStream","console","log","toAdd","displayTrack","getVideoTracks","rdStream","rs","vt","enabled","readyState","rt","addTrack","unshift","onTrack","track","pr","currStream","_remoteStreams","active","tr","_remoteTracks","o","concat","compTr","Boolean","strm","onMessageRecieved","msg","signal","from","onConnected","onClose","emit","sessionId","onError","code","onLocalSignal","send","to","onDataRecieved","message","mine","author","off","displayVideoTracks","tracks","width","canvas","Object","assign","createElement","getContext","fillRect","captureStream","blankVideo","addStream","stringify","removeStream","initiator","proposal","destroy","addConnections","addConnectionsSelector","removeConnectionsSelector","connections","removeConnections","onPersonJoined","onMessage","onPersonLeft","conn","c","vFluid","vScroll","overflowY","overflowX","heading","fluid","pivotContainer","flexDirection","pivotStyles","itemContainer","panelStyles","scrollableContent","overflow","alignItems","useModalClassnames","makeStyles","flexFlow","maxWidth","maxHeight","header","flex","borderTop","themePrimary","neutralPrimary","cursor","modalStyles","useCloseButtonStyles","marginLeft","marginRight","messages","children","info","useMessageStyles","position","neutralQuaternary","borderRadius","fontFamily","textOverflow","wordBreak","myMessageStyle","SharedColors","Text","block","nowrap","setMessage","scrolling","s","scrollTo","scrollHeight","scrollToBottom","handleSubmit","trim","nanoid","Stack","verticalFill","verticalAlign","disableShrink","TextField","multiline","autoAdjustHeight","placeholder","value","onChange","_","val","onKeyPress","e","shiftKey","IconButton","setPanel","messagesState","isModalled","setIsModalled","modalClassnames","closeButtonStyles","isMobile","matchMedia","matches","onRenderChatContent","onRenderModal","Modal","allowTouchBodyScroll","titleAriaId","isOpen","isModeless","containerClassName","dragOptions","moveMenuItemText","closeMenuItemText","menu","ContextualMenu","dragHandleSelector","horizontalAlign","PersonComponent","index","item","mouseEvent","setMouseEvent","PersonaPresence","presence","setPresence","showNotImplemented","onContextMenu","preventDefault","semanticColors","listItemBackgroundHovered","horizontal","Persona","size","PersonaSize","itemType","ContextualMenuItemType","hidden","connectionsState","onRenderPerson","aloneToast","dismissToast","marginBottom","List","onRenderCell","panel","toLocaleUpperCase","slice","onRenderNavigationContent","defaultRender","Panel","isHiddenOnDismiss","isBlocking","closeButtonAriaLabel","isFooterAtBottom","Pivot","selectedKey","onLinkClick","itemKey","PivotItem","alwaysRender","itemIcon","headerText","gridContainer","flexWrap","mediaContainer","bottom","zIndex","userMediaContainer","right","displayMediaContainer","main","minHeight","minWidth","pinnedContainer","sideList","flexShrink","N","AR","setSize","setIsMobile","innerHeight","innerWidth","userMedia","displayMedia","pinnedItem","setPinnedItem","remoteDisplay","useSize","bodyBackground","SIDE_LIST_WIDTH","layerProps","hostId","muted","noContextualMenu","fullscreen","setFullscreen"],"sourceRoot":""}